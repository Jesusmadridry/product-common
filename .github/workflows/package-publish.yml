name: Publishing Artifacts

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  contents: write

env:
  ORG_GRADLE_PROJECT_jarType: ""
  ORG_GRADLE_PROJECT_gpr_user: ${{ secrets.COMMON_GITHUB_USERNAME }}
  ORG_GRADLE_PROJECT_gpr_user_git: ${{ secrets.COMMON_GITHUB_USERNAME }}
  ORG_GRADLE_PROJECT_gpr_key: ${{ secrets.COMMON_GITHUB_TOKEN }}
  ORG_GRADLE_PROJECT_gpr_key_git: ${{ secrets.COMMON_GITHUB_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.COMMON_GITHUB_TOKEN }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: corretto
        java-version: 17

    - name: Retrieving App Version & Pattern
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        arguments: scapedVersionTxt versionTxt

    - name: Register Version Pattern
      id: config-artifact
      run: |
        echo "VERSION_PATTERN=$(cat version-pattern.txt)" >> "$GITHUB_ENV"
        echo "PROJECT_TAG=$(cat version.txt)" >> "$GITHUB_ENV"
        echo "App version = $(cat version.txt)"

    - name: Removing Previous Packages
      if: success() # Ensures this only runs if previous steps succeed
      uses: smartsquaregmbh/delete-old-packages@v0.8.0
      with:
        type: 'maven'
        user: Jesusmadridry
        keep: 10
        version-pattern: "^${{ env.VERSION_PATTERN }}$|^${{ env.VERSION_PATTERN }}-SNAPSHOT$"
        token: ${{ secrets.COMMON_GITHUB_TOKEN }}
        names: |
          product-common-api.product-common-exception
          product-common-api.product-common-persist

    - uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        arguments: build publish

    - name: Verbose context
      id: verbose-env
      run: |
        env
        echo "GITHUB_USERNAME: $GITHUB_USERNAME"
        echo "GITHUB_TOKEN: $GITHUB_TOKEN"

    - name: Tagging Release and documentation
      id: tag-release
      run: |
        MESSAGE_TAG=$(git log --pretty=format:'%s - DEV: %an' -1)
        VERSION=$(cat version.txt)
        TAG_DATE=$(TD="America/New_York" date +"%y%m%d%H%M")
        GIT_TAG=$VERSION-$TAG_DATE
        
        HASH=$(git log --pretty=format:"%h" -1)
        HASH_URL=https://github.com/$GITHUB_REPOSITORY/commit/$HASH
        
        DEPLOY_DATE=$(TZ="America/New_York" date +"%D %R")

        BRANCH_NAME=$(git log --pretty=format:"%s" -1)
        JIRA_TASK=${BRANCH_NAME:4:5}
        JIRA_URL=https://mchomes.atlassian.net/browse/ENG-$JIRA_TASK
        DEV=$(git log --pretty=format:"%an" -1)
        
        # Push Tag to GIT
        git config --global user.name $GITHUB_ACTOR
        git config --global user.email "jesusmadridry@gmail.com"
        git tag $GIT_TAG -am "$PROJECT_TAG : $MESSAGE_TAG - ACTOR: $GITHUB_ACTOR"
        git push origin --tags
        
        # Update release documentation
        NEW_ROW="| [$VERSION]($HASH_URL) | $HASH | $DEPLOY_DATE | [$BRANCH_NAME]($JIRA_URL) | $DEV | $GITHUB_ACTOR |"
